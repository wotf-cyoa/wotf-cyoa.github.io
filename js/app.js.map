{"version":3,"sources":["node_modules/auto-reload-brunch/vendor/auto-reload.js","app/app.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChDA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjGA;AAAA","file":"public/js/app.js","sourcesContent":["(function() {\n  var WebSocket = window.WebSocket || window.MozWebSocket;\n  var br = window.brunch = (window.brunch || {});\n  var ar = br['auto-reload'] = (br['auto-reload'] || {});\n  if (!WebSocket || ar.disabled) return;\n\n  var cacheBuster = function(url){\n    var date = Math.round(Date.now() / 1000).toString();\n    url = url.replace(/(\\&|\\\\?)cacheBuster=\\d*/, '');\n    return url + (url.indexOf('?') >= 0 ? '&' : '?') +'cacheBuster=' + date;\n  };\n\n  var reloaders = {\n    page: function(){\n      window.location.reload(true);\n    },\n\n    stylesheet: function(){\n      [].slice\n        .call(document.querySelectorAll('link[rel=\"stylesheet\"]'))\n        .filter(function(link){\n          return (link != null && link.href != null);\n        })\n        .forEach(function(link) {\n          link.href = cacheBuster(link.href);\n        });\n    }\n  };\n  var port = ar.port || 9485;\n  var host = br.server || window.location.hostname;\n\n  var connect = function(){\n    var connection = new WebSocket('ws://' + host + ':' + port);\n    connection.onmessage = function(event){\n      if (ar.disabled) return;\n      var message = event.data;\n      var reloader = reloaders[message] || reloaders.page;\n      reloader();\n    };\n    connection.onerror = function(){\n      if (connection.readyState) connection.close();\n    };\n    connection.onclose = function(){\n      window.setTimeout(connect, 1000);\n    };\n  };\n  connect();\n})();\n","var editor = ace.edit('game-rb-editor');\neditor.setTheme('ace/theme/monokai');\neditor.getSession().setFoldStyle('manual');\neditor.getSession().setMode(\"ace/mode/ruby\");\neditor.getSession().setTabSize(2);\neditor.getSession().setUseSoftTabs(true);\neditor.getSession().setUseWrapMode(true);\neditor.setDisplayIndentGuides(false);\neditor.setHighlightActiveLine(true);\neditor.setShowPrintMargin(false);\neditor.setShowInvisibles(true);\n\nvar addToTerminal = function(value, type) {\n    if (type === 'output' && value.indexOf('()') > -1) return;\n    var classes = 'outputs outputs-' + type;\n    value = value.replace(/&/g, '&amp;')\n                 .replace(/>/g, '&gt;')\n                 .replace(/</g, '&lt;')\n                 .replace(/\"/g, '&quot;')\n                 .replace(/'/g, '&apos;')\n                 .replace(/\\n/g, '<br>');\n    terminalOutputs.innerHTML += '<p class=\"' + classes + '\">' + value + '</p>';\n    terminalInput.scrollIntoView();\n};\n\nvar handleterminalInput = function(event) {\n    var key = event.which || event.keyCode;\n    if (key == 13) {\n        event.preventDefault();\n        socket.emit('terminalInput', { input: terminalInput.value });\n        addToTerminal(terminalInput.value, 'input');\n        terminalInput.value = '';\n    }\n};\n\nvar handleFileBuild = function() {\n    handleFileSave();\n    addToTerminal('Build started...', 'status');\n};\n\nvar handleFileSave = function() {\n    var currentFileContent = editor.getValue();\n    socket.emit('fileSave', { fileContent: currentFileContent });\n};\n\nvar handleFileLoad = function() {\n    var currentFileContent = editor.getValue();\n    socket.emit('fileLoad', { input: currentFileContent });\n};\n\n//var socket = io('http://localhost:8888/ruby'),\nvar socket = io('http://wotf-cyoa.herokuapp.com:80/ruby'),\n    terminal = document.getElementById('terminal'),\n    terminalOutputs = document.getElementById('terminal-outputs'),\n    terminalInput = document.getElementById('terminal-input'),\n    sourceActionBuild = document.getElementById('source-action-build');\n\nterminal.addEventListener('click', function(e) { terminalInput.focus() }, false);\n\nsocket.on('connect', function() {\n    addToTerminal('Server connected.', 'status');\n    terminalInput.addEventListener('keypress', handleterminalInput, false);\n    sourceActionBuild.addEventListener('click', handleFileBuild, false);\n});\n\nsocket.on('disconnect', function() {\n    addToTerminal('Server disconnected.', 'error');\n    terminalInput.removeEventListener('keypress', handleterminalInput, false);\n    sourceActionBuild.removeEventListener('click', handleFileBuild, false);\n});\n\nsocket.on('ready', function(data) {\n    addToTerminal(data.output, 'status');\n    editor.setValue(data.fileContent);\n    editor.gotoLine(0);\n});\n\nsocket.on('terminalOutput', function(data) {\n    //if (data.output.indexOf('Error') > -1 || data.output.indexOf('undefined') > -1)\n    //    addToTerminal(data.output, 'error');\n    //else addToTerminal(data.output, 'output');\n    addToTerminal(data.output, 'output');\n});\n\nsocket.on('terminalError', function(data) {\n    addToTerminal(data.output, 'error');\n});\n\nsocket.on('fileSaved', function(data) {\n    addToTerminal(data.output, 'status');\n    handleFileLoad();\n});\n\nsocket.on('fileLoaded', function(data) {\n    addToTerminal(data.output, 'status');\n    addToTerminal('Build successful!', 'status');\n});\n"]}